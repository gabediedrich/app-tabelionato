# Generated by Django 3.0.11 on 2021-02-18 16:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(help_text='Insira o texto da alternativa que será exibido.', max_length=1000, verbose_name='Alternativa')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty', models.IntegerField(blank=True, default=1, help_text='Insira a dificuldade da questão, entre 1 e 5', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Dificuldade')),
                ('content', models.TextField(help_text='Insira o enunciado que deve ser exibido.', max_length=500, verbose_name='Questão')),
                ('explanation', models.TextField(blank=True, help_text='Explicação que deve ser exibida após a questão ser respondida.', max_length=500, verbose_name='Explicação')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.Category', verbose_name='Categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EssayAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quiz.Answer')),
            ],
            bases=('quiz.answer',),
        ),
        migrations.CreateModel(
            name='EssayQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quiz.Question')),
            ],
            bases=('quiz.question',),
        ),
        migrations.CreateModel(
            name='FileAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quiz.Answer')),
            ],
            bases=('quiz.answer',),
        ),
        migrations.CreateModel(
            name='MultiChoiceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quiz.Question')),
            ],
            bases=('quiz.question',),
        ),
        migrations.CreateModel(
            name='TrueFalseQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quiz.Question')),
                ('is_correct', models.BooleanField(default=False, help_text='Marque se o enunciado for verdadeiro. Deixe em branco se for falso.', verbose_name='Correto')),
            ],
            bases=('quiz.question',),
        ),
        migrations.CreateModel(
            name='ClosedAnswer',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quiz.Answer')),
                ('is_correct', models.BooleanField(default=False, help_text='Esta é a resposta correta?', verbose_name='Correta')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.MultiChoiceQuestion', verbose_name='Questão')),
            ],
            bases=('quiz.answer',),
        ),
    ]
